name: 'Scan and Validate'
description: 'Scan and Validate IAC Template'

inputs:
  aws-role-arn:
    description: "Arn of the role to be assumed. (e.g., arn:aws:iam::111122223333:role/github-oidc-role)"
    required: true
    default: "arn:aws:iam::111122223333:role/github-oidc-role"
  aws-region:
    description: "AWS region where the services will be deployed (e.g., us-east-1)"
    required: true
    default: "us-east-1"
  template-dir:
    description: "The directory path of the IAC file."
    required: true
    default: "cfn"
  template-file:
    description: "The IAC template file name."
    required: true
    default: "root-stack-template.yaml"
  iac-framework:
    description: "IAC Framework - Accepted values: cloudformation, terraform, kubernetes, all"
    required: true
    default: "cloudformation"
  soft-fail:
    description: "If true, Checkov scan will not fail the pipeline"
    required: true
    default: true
  github-token:
    description: 'GitHub token'
    required: true
outputs:
  valid-template:
    description: 'Specifies if the template is valid'
    value: ${{ steps.validate-template.outputs.valid-template }}
  validation-error:
    description: 'Validation Error'
    value: ${{ steps.validate-template.outputs.validation-error }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      id: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure AWS credentials from AWS account
      id: aws-config
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}
        role-session-name: github-aws-cloudformation-oidc

    - name: Validate CloudFormation Template
      id: validate-template
      run: |
        set +e
        OUTPUT=$(aws cloudformation validate-template --template-body file://template.yaml 2>&1)
        STATUS=$?
        set -e
    
        if [ $STATUS -eq 0 ]; then
          echo "✅ CloudFormation template is valid."
          echo "valid-template=true" >> $GITHUB_OUTPUT
          echo "validation-error=''" >> $GITHUB_OUTPUT
          
        else
          echo "❌ CloudFormation template is invalid."
          echo "valid-template=false" >> $GITHUB_OUTPUT
          echo "validation-error=$OUTPUT" >> $GITHUB_OUTPUT
        fi

    - name: Run Checkov Scan
      if: ${{ steps.validate-template.valid-template == 'true' }}
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ github.workspace }}/${{ inputs.template-dir }}
        soft_fail: ${{ inputs.soft-fail }}
        quiet: true
        framework: ${{ inputs.iac-framework }}
