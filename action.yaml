name: 'Scan and Validate'
description: 'Scan and Validate IAC Template'

inputs:
  aws-role-arn:
    description: "Arn of the role to be assumed. (e.g., arn:aws:iam::111122223333:role/github-oidc-role)"
    required: true
    default: "arn:aws:iam::111122223333:role/github-oidc-role"
  aws-region:
    description: "AWS region where the services will be deployed (e.g., us-east-1)"
    required: true
    default: "us-east-1"
  template-dir:
    description: "The directory path of the IAC file."
    required: true
    default: "cfn"
  template-file:
    description: "The IAC template file name."
    required: true
    default: "root-stack-template.yaml"
  iac-framework:
    description: "IAC Framework - Accepted values: cloudformation, terraform, kubernetes, all"
    required: true
    default: "cloudformation"
  soft-fail:
    description: "If true, Checkov scan will not fail the pipeline"
    required: true
    default: true
  github-token:
    description: 'GitHub token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      id: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure AWS credentials from AWS account
      id: aws-config
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}
        role-session-name: github-aws-cloudformation-oidc

    - name: Run CloudFormation Validate
      id: validate-cfn
      if: ${{ inputs.iac-framework == 'cloudformation' }}
      shell: bash
      run: |
        echo "Building structured request for CloudFormation validation..."
    
        TEMPLATE_PATH="${{ github.workspace }}/${{ inputs.template-dir }}/${{ inputs.template-file }}"
        echo "Template path: $TEMPLATE_PATH"
    
        # Create a JSON object to log or pass parameters (for extensibility)
        INPUT_JSON=$(jq -n \
          --arg body "file://$TEMPLATE_PATH" \
          '{ "template-body": $body }'
        )
    
        echo "Constructed input JSON:"
        echo "$INPUT_JSON"
    
        # Extract the actual path from the JSON and run the validation
        TEMPLATE_BODY=$(echo "$INPUT_JSON" | jq -r '."template-body"')
    
        echo "Running template validation..."
    
        VALIDATION_OUTPUT=$(aws cloudformation validate-template \
          --template-body "$TEMPLATE_BODY" 2>&1)
        STATUS=$?
    
        echo "Raw output:"
        echo "$VALIDATION_OUTPUT"
    
        if [ $STATUS -eq 0 ]; then
          DESCRIPTION=$(echo "$VALIDATION_OUTPUT" | jq -r '.Description // "No description available"')
          echo "Validation passed. Description: $DESCRIPTION"
        else
          DESCRIPTION="Validation failed"
          echo "Validation failed."
        fi
    
        # Export outputs
        echo "description=$DESCRIPTION" >> $GITHUB_OUTPUT
        echo "raw_output=$VALIDATION_OUTPUT" >> $GITHUB_OUTPUT
        echo "success=$([ $STATUS -eq 0 ] && echo true || echo false)" >> $GITHUB_OUTPUT
    
        # Optional: fail pipeline based on soft-fail input
        if [ $STATUS -ne 0 ] && [ "${{ inputs.soft-fail }}" != "true" ]; then
          echo "Template validation failed and soft-fail is disabled."
          exit 1
        fi




    - name: Run Checkov Scan
      if: always()
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ github.workspace }}/${{ inputs.template-dir }}
        soft_fail: ${{ inputs.soft-fail }}
        quiet: true
        framework: ${{ inputs.iac-framework }}
