name: 'Action Name'
description: 'Action Description'

inputs:
  aws-role-arn:
    description: Arn of the role to be assumed.
    required: true
    default: arn:aws:iam::111122223333:role/github-oidc-role
    type: string
  aws-region:
    description: AWS region where the services will be deployed
    required: true
    default: us-east-1
    type: string
  template-dir:
    description: The directory path of the IAC file.
    required: true
    default: "."
    type: string
  iac-framework:
    description: IAC Framework - CloudFormation, Terraform, Kubernetes
    required: true
    default: "cloudformation"
    type: choice
    options:
      - cloudformation
      - terraform
      - kubernetes
      - all
  soft-fail:
    description: Checkov Scan to fail the pipeline
    required: true
    type: boolean
    default: true
  github-token:
    description: 'GitHub token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      id: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure AWS credentials from AWS account
      id: aws-config
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}
        role-session-name: github-aws-cloudformation-oidc

    - name: Run Checkov Scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ inputs.template-dir }}
        soft_fail: ${{ inputs.soft-fail }} # optional: do not return an error code if there are failed checks
        # check: CKV_AWS_1 # optional: run only a specific check_id. can be comma separated list
        # skip_check: CKV_AWS_2 # optional: skip a specific check_id. can be comma separated list
        quiet: true # optional: display only failed checks
        framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
        # output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
        # download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
        # log_level: DEBUG # optional: set log level. Default WARNING
        # config_file: path/this_file
        # baseline: cloudformation/.checkov.baseline # optional: Path to a generated baseline file. Will only report results not in the baseline.
        # container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
        
    - name: Test AWS CLI
      id: test-aws-cli
      shell: bash
      run: |
        aws s3 ls

    # - name: Configure OIDC      
    #   shell: bash
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.github-token }}
    #   run: |
    #     echo "Hello World !"
        # ISSUE_NUMBER="${{ github.event.issue.number }}"
        # REPO="${{ github.repository }}"
        # OWNER=$(echo $REPO | cut -d'/' -f1)
        # BRANCH_NAME="${{ steps.create-branch.outputs.branch-name }}"
        # COMMENT_BODY="Branch [$BRANCH_NAME](https://github.com/$OWNER/$REPO/tree/$BRANCH_NAME) created ðŸš€"

        # curl -s -X POST \
        #   -H "Authorization: token $GITHUB_TOKEN" \
        #   -H "Content-Type: application/json" \
        #   -d "{\"body\": \"$COMMENT_BODY\"}" \
        #   https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments
